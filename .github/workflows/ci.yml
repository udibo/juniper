name: CI
on:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        description: Repository codecov token
        required: false
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Setup deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      - name: Lint source files
        run: deno lint
  format:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Setup deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      - name: Check formatting
        run: deno fmt --check
  test:
    name: Test
    needs: [lint, format]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      - name: Build, cache, load, and optionally push postgres test image
        uses: docker/build-push-action@v6
        with:
          context: ./example
          file: ./example/database/Dockerfile.postgres
          tags: ghcr.io/${{ github.repository_owner }}/postgres-test:latest
          push: ${{ github.event_name != 'pull_request' }}
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Start test services
        run: |
          cat <<EOF > example/docker-compose.override.yml
          services:
            postgres-test:
              image: ghcr.io/${{ github.repository_owner }}/postgres-test:latest
              build: null
          EOF
          deno task start-test
      - name: Run tests and collect coverage
        run: deno task test --coverage
      - name: View coverage report
        run: deno coverage --detailed
      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: coverage/lcov.info
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Stop test services
        run: deno task stop-test
