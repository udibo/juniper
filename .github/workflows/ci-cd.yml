name: CI/CD
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  formatAndLint:
    name: Check formatting and lint
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Setup deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
          cache: true
      - name: Check formatting
        run: deno fmt --check
      - name: Lint source files
        run: deno lint
  test:
    name: Test on ${{ matrix.os }}
    needs: [formatAndLint]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Setup deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
          cache: true
      - name: Run tests and collect coverage
        run: deno task test --coverage
      - name: View coverage report
        run: deno coverage --detailed
      - name: Upload coverage
        uses: codecov/codecov-action@v5
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          fail_ci_if_error: true
          files: coverage/lcov.info
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  deploy:
    name: Deploy
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Setup deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
          cache: true
      - name: Deploy to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: juniper
          entrypoint: ./example/main.ts
