name: CI/CD
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  formatAndLint:
    name: Check formatting and lint
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Setup deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
          cache: true
      - name: Check formatting
        run: deno fmt --check
      - name: Lint source files
        run: deno lint
  test-build:
    name: Test build on ${{ matrix.os }}
    needs: [formatAndLint]
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Setup deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
          cache: true
      - name: Run tests for build
        run: deno test -A --env-file --env-file=.env.test --trace-leaks build.test.ts
  test:
    name: Test
    needs: [build-postgres-image]
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://test:password@localhost:5432/test
    services:
      postgres-test:
        image: ghcr.io/${{ github.repository_owner }}/juniper-postgres:latest
        env:
          POSTGRES_DB: test
          POSTGRES_USER: test
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: true
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Setup deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
          cache: true
      - name: Run tests and collect coverage
        run: deno task test --coverage
      - name: View coverage report
        run: deno coverage --detailed
      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: coverage/lcov.info
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  deploy:
    name: Deploy
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Setup deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
          cache: true
      - name: Deploy to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: 'juniper'
          entrypoint: ./example/main.ts
  build-postgres-image:
    name: Build PostgreSQL Image
    needs: [formatAndLint]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push postgres image
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./example/database/Dockerfile.postgres
          tags: ghcr.io/${{ github.repository_owner }}/juniper-postgres:latest
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
